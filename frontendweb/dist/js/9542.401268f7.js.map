{"version":3,"file":"js/9542.401268f7.js","mappings":"wNAAO,MAAMA,EAAgBC,IAC3B,MAAMC,EAAoBC,IACxB,MAAMC,EAAQC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,IAAID,MAC7CE,EAAUC,KAAKC,MAAOL,EAAQ,IAAQ,IACtCM,EAAUF,KAAKC,MAAOL,EAAQ,IAAO,GAAM,IAC3CO,EAAQH,KAAKC,MAAOL,EAAQ,KAAoB,IAChDQ,EAAOJ,KAAKC,MAAML,EAAQ,OAEhC,MAAO,CACLA,QACAQ,OACAD,QACAD,UACAH,UACD,EAGGM,EAAkBA,CAACC,EAAOX,KAC9B,MAAMY,EAAWD,EAAME,cAAc,eAC/BC,EAAYH,EAAME,cAAc,gBAChCE,EAAcJ,EAAME,cAAc,kBAClCG,EAAcL,EAAME,cAAc,kBAElCI,EAAcA,KAClB,MAAMC,EAAInB,EAAiBC,GAE3BY,EAASO,UAAYD,EAAET,KACvBK,EAAUK,WAAa,IAAMD,EAAEV,OAAOY,OAAO,GAC7CL,EAAYI,WAAa,IAAMD,EAAEX,SAASa,OAAO,GACjDJ,EAAYG,WAAa,IAAMD,EAAEd,SAASgB,OAAO,GAE7CF,EAAEjB,OAAS,GACboB,cAAcC,EAChB,EAGFL,IACA,MAAMK,EAAeC,YAAYN,EAAa,IAAK,EAErDO,QAAQC,IAAI3B,GACZ,IAAI4B,EAAO5B,EAAQ6B,aAAa,kBACpBC,GAARF,IACFA,EAAOxB,KAAKC,MAAM,IAAID,MAAU,QAElC,MAAM2B,EAAW,IAAI3B,KAAKwB,GAC1BhB,EAAgBZ,EAAS+B,EAAS,E,yQCOpC,MAAMC,GAAUC,EAAAA,EAAAA,IAAI,M,OACpBC,EAAAA,EAAAA,KAAU,IAAMnC,EAAaiC,EAAQG,S,+wEClDrC,MAAMC,EAAc,EAEpB,O","sources":["webpack://hopeui-vue/./src/utilities/countdown.js","webpack://hopeui-vue/./src/views/errors/MaintenancePage.vue","webpack://hopeui-vue/./src/views/errors/MaintenancePage.vue?6bad"],"sourcesContent":["export const useCountdown = (refElem) => {\r\n  const getTimeRemaining = (endtime) => {\r\n    const total = Date.parse(endtime) - Date.parse(new Date())\r\n    const seconds = Math.floor((total / 1000) % 60)\r\n    const minutes = Math.floor((total / 1000 / 60) % 60)\r\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24)\r\n    const days = Math.floor(total / (1000 * 60 * 60 * 24))\r\n\r\n    return {\r\n      total,\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    }\r\n  }\r\n\r\n  const initializeClock = (clock, endtime) => {\r\n    const daysSpan = clock.querySelector('[data-days]')\r\n    const hoursSpan = clock.querySelector('[data-hours]')\r\n    const minutesSpan = clock.querySelector('[data-minutes]')\r\n    const secondsSpan = clock.querySelector('[data-seconds]')\r\n\r\n    const updateClock = () => {\r\n      const t = getTimeRemaining(endtime)\r\n\r\n      daysSpan.innerHTML = t.days\r\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2)\r\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)\r\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2)\r\n\r\n      if (t.total <= 0) {\r\n        clearInterval(timeinterval)\r\n      }\r\n    }\r\n\r\n    updateClock()\r\n    const timeinterval = setInterval(updateClock, 1000)\r\n  }\r\n  console.log(refElem)\r\n  let time = refElem.getAttribute('data-date')\r\n  if (time == undefined) {\r\n    time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000\r\n  }\r\n  const deadline = new Date(time)\r\n  initializeClock(refElem, deadline)\r\n}\r\n","<template>\r\n  <b-container fluid class=\"p-0\">\r\n    <div class=\"iq-maintenance text-center\">\r\n      <img src=\"@/assets/images/error/01.png\" class=\"img-fluid mb-4\" alt=\"maintenance\" loading=\"lazy\" />\r\n      <div class=\"maintenance-bottom text-white pb-0\">\r\n        <div class=\"bg-primary\" style=\"background: transparent; height: 320px\">\r\n          <div class=\"gradient-bottom\">\r\n            <div class=\"bottom-text general-zindex\">\r\n              <h1 class=\"mb-2 text-white\">Hang on! We are under maintenance</h1>\r\n              <p>It will not take a long time till we get the error fiked. We wii live again in</p>\r\n              <ul class=\"countdown d-flex justify-content-center align-items-center list-inline\" data-date=\"May 30 2025 20:20:22\" ref=\"element\">\r\n                <li><span data-days>0</span>Days</li>\r\n                <li><span data-hours>0</span>Hours</li>\r\n                <li><span data-minutes>0</span>Minutes</li>\r\n                <li><span data-seconds>0</span>Seconds</li>\r\n              </ul>\r\n              <div class=\"w-50 mx-auto mt-2\">\r\n                <div class=\"input-group search-input search-input\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Enter your mail\" />\r\n                  <a href=\"#\" class=\"btn bg-white text-primary ms-2 rounded\">Notify Me</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"c xl-circle\">\r\n              <div class=\"c lg-circle\">\r\n                <div class=\"c md-circle\">\r\n                  <div class=\"c sm-circle\">\r\n                    <div class=\"c xs-circle\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"sign-bg\">\r\n      <svg width=\"280\" height=\"230\" viewBox=\"0 0 431 398\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g opacity=\"0.05\">\r\n          <rect x=\"-157.085\" y=\"193.773\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 -157.085 193.773)\" fill=\"#3B8AFF\" />\r\n          <rect x=\"7.46875\" y=\"358.327\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 7.46875 358.327)\" fill=\"#3B8AFF\" />\r\n          <rect x=\"61.9355\" y=\"138.545\" width=\"310.286\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 61.9355 138.545)\" fill=\"#3B8AFF\" />\r\n          <rect x=\"62.3154\" y=\"-190.173\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 62.3154 -190.173)\" fill=\"#3B8AFF\" />\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  </b-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useCountdown } from '@/utilities/countdown'\r\nconst element = ref(null)\r\nonMounted(() => useCountdown(element.value))\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./MaintenancePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaintenancePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useCountdown","refElem","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","clock","daysSpan","querySelector","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","setInterval","console","log","time","getAttribute","undefined","deadline","element","ref","onMounted","value","__exports__"],"sourceRoot":""}